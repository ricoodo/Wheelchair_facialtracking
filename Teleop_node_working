#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
import curses

class TeleopNode(Node):
    def __init__(self):
        super().__init__('teleop_node')
        self.publisher_ = self.create_publisher(Twist, 'cmd_vel', 10)
        self.cmd_msg = Twist()

    def keyboard_input(self, stdscr):
        stdscr.clear()
        stdscr.addstr(0, 0, "Use arrow keys to control the wheelchair. Press 'q' to quit.")
        stdscr.refresh()
        
        stdscr.keypad(True)

        while True:
            key = stdscr.getch()
            
            if key == -1:
                self.cmd_msg.linear.x = 0.0
                self.cmd_msg.angular.z = 0.0
                self.publisher_.publish(self.cmd_msg)
                continue


            if key == curses.KEY_UP:
                self.cmd_msg.linear.x = 0.5
                self.cmd_msg.angular.z = 0.0
            elif key == curses.KEY_DOWN:
                self.cmd_msg.linear.x = -0.5
                self.cmd_msg.angular.z = 0.0
            elif key == curses.KEY_LEFT:
                self.cmd_msg.linear.x = 0.0
                self.cmd_msg.angular.z = -0.5
            elif key == curses.KEY_RIGHT:
                self.cmd_msg.linear.x = 0.0
                self.cmd_msg.angular.z = 0.5
            elif key == ord('q'):
                break

            #print("linear.x type:", type(self.cmd_msg.linear.x))
            #print("angular.z type:", type(self.cmd_msg.angular.z))

            self.publisher_.publish(self.cmd_msg)

def main(args=None):
    rclpy.init(args=args)

    node = TeleopNode()
    curses.wrapper(node.keyboard_input)

    rclpy.shutdown()

if __name__ == '__main__':
    main()
